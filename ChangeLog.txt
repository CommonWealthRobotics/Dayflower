2021-07-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for PolkaDotTexture to the GPU-renderer.
	* ADD:		Add the field texturePolkaDotTextureArray to the AbstractTextureKernel class.
	* ADD:		Add the methods getTexturePolkaDotTextureArray(), getTexturePolkaDotTextureCount(), getTexturePolkaDotTextureOffsetAbsolute(float[]), getTexturePolkaDotTextureOffsetRelative(float[]) and setTexturePolkaDotTextureArray(float[]) to the CompiledTextureCache class.
	* ADD:		Add the constants POLKA_DOT_TEXTURE_* to the CompiledTextureCache class.
	* ADD:		Add the PolkaDotMaterial class.
	* CHANGE:	Change the ID values of the SubstrateMaterial and UberMaterial classes.

2021-07-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the PolkaDotTexture class.
	* ADD:		Add constants to the CompiledCameraCache class.
	* ADD:		Add the method toArray(Camera) to the CompiledCameraCache class.
	* ADD:		Add constants to the CompiledPrimitiveCache class.
	* ADD:		Add the methods getConeAngle(), getConeAngleDelta(), getCosConeAngle(), getCosConeAngleMinusConeAngleDelta() and getIntensity() to the SpotLight class.
	* ADD:		Add the methods getPerezRelativeLuminance(), getPerezX(), getPerezY(), getRadius(), getSunDirectionObjectSpace() and getZenith() to the PerezLight class.
	* ADD:		Add the constants L_D_R_IMAGE_LIGHT_* to the CompiledLightCache class.
	* ADD:		Add the methods getDistribution() and getRadius() to the LDRImageLight class.
	* CHANGE:	Change the String representations created by the toString() method of the BullseyeTexture and CheckerboardTexture classes. They were wrong.
	* CHANGE:	Change the ID values of the SimplexFractionalBrownianMotionTexture, SurfaceNormalTexture and UVTexture classes.
	* CHANGE:	Change the ID values of all Material implementations.
	* REMOVE:	Remove the constants ARRAY_OFFSET_* and ARRAY_SIZE from the Camera class.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the Primitive class.
	* REMOVE:	Remove the constant ARRAY_LENGTH from the PointLight and SpotLight classes.
	* REMOVE:	Remove the constants ARRAY_OFFSET_* from the LDRImageLight, PerezLight, PointLight and SpotLight classes.
	* REMOVE:	Remove the method toArray() from the Camera class.
	* REMOVE:	Remove the method toArray() from the Primitive class.
	* REMOVE:	Remove the method toArray() from the LDRImageLight, PerezLight, PointLight and SpotLight classes.
	* REMOVE:	Remove the method getArrayLength() from the LDRImageLight and PerezLight classes.

2021-07-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getRadiance() and getRadius() to the DirectionalLight class.
	* ADD:		Add the methods getColor(), getFrequency(), getGain() and getOctaves() to the SimplexFractionalBrownianMotionTexture class.
	* ADD:		Add the method getFrequency() to the MarbleTexture class.
	* ADD:		Add constants to the CompiledLightCache class.
	* ADD:		Add constants to the CompiledMaterialCache class.
	* ADD:		Add constants to the CompiledTextureCache class.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the DiffuseAreaLight and DirectionalLight classes.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the ClearCoatMaterial, DisneyMaterial, GlassMaterial, GlossyMaterial, MatteMaterial, MetalMaterial, MirrorMaterial, PlasticMaterial and SubstrateMaterial classes.
	* REMOVE:	Remove the constants ARRAY_OFFSET_TEXTURE_EMISSION, ARRAY_OFFSET_TEXTURE_EMISSION_ID and ARRAY_OFFSET_TEXTURE_EMISSION_OFFSET from the Material interface.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the BlendTexture, BullseyeTexture, CheckerboardTexture, ConstantTexture, LDRImageTexture, MarbleTexture and SimplexFractionalBrownianMotionTexture classes.
	* REMOVE:	Remove the method toArray() from the Transform class.
	* REMOVE:	Remove the method toArray() from the DiffuseAreaLight and DirectionalLight classes.
	* REMOVE:	Remove the method toArray() from the ClearCoatMaterial, DisneyMaterial, GlassMaterial, GlossyMaterial, MatteMaterial, MetalMaterial, MirrorMaterial, PlasticMaterial and SubstrateMaterial classes.
	* REMOVE:	Remove the method toArray() from the BlendTexture, BullseyeTexture, CheckerboardTexture, ConstantTexture, LDRImageTexture, MarbleTexture and SimplexFractionalBrownianMotionTexture classes.

2021-07-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getRootBVHNode() to the TriangleMesh3D and TriangleMesh3F classes.
	* ADD:		Add the methods getAH(), getCH(), getRMax(), getZMax() and getZMin() to the Hyperboloid3D and Hyperboloid3F classes.
	* ADD:		Add constants to the CompiledBoundingVolume3FCache class.
	* ADD:		Add constants to the CompiledShape3FCache class.
	* CHANGE:	Optimized the Scene Compiler API.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the AxisAlignedBoundingBox3D, AxisAlignedBoundingBox3F, BoundingSphere3D and BoundingSphere3F classes.
	* REMOVE:	Remove the constants ARRAY_OFFSET_* from the BVHNode3D, BVHNode3F, LeafBVHNode3D, LeafBVHNode3F, TreeBVHNode3D and TreeBVHNode3F classes.
	* REMOVE:	Remove the constants ARRAY_LENGTH and ARRAY_OFFSET_* from the Cone3D, Cone3F, Cylinder3D, Cylinder3F, Disk3D, Disk3F, Hyperboloid3D, Hyperboloid3F, Paraboloid3D, Paraboloid3F, Plane3D, Plane3F, Rectangle3D, Rectangle3F, RectangularCuboid3D, RectangularCuboid3F, Sphere3D, Sphere3F, Torus3D, Torus3F, Triangle3D and Triangle3F classes.
	* REMOVE:	Remove the method toArray() from the AxisAlignedBoundingBox3D, AxisAlignedBoundingBox3F, BoundingSphere3D and BoundingSphere3F classes.
	* REMOVE:	Remove the method toArray() from the Cone3D, Cone3F, Cylinder3D, Cylinder3F, Disk3D, Disk3F, Hyperboloid3D, Hyperboloid3F, Paraboloid3D, Paraboloid3F, Plane3D, Plane3F, Rectangle3D, Rectangle3F, RectangularCuboid3D, RectangularCuboid3F, Sphere3D, Sphere3F, Torus3D, Torus3F, Triangle3D, Triangle3F, TriangleMesh3D and TriangleMesh3F classes.
	* REMOVE:	Remove the method getArrayLength() from the BVHNode3D, BVHNode3F, LeafBVHNode3D, LeafBVHNode3F, TreeBVHNode3D, TreeBVHNode3F, TriangleMesh3D and TriangleMesh3F classes.
	* REMOVE:	Remove the method toArray(BVHNode3D, List<T>) from the BVHNode3Ds class.
	* REMOVE:	Remove the method toArray(BVHNode3F, List<T>) from the BVHNode3Fs class.

2021-07-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the NodeCache class.
	* ADD:		Add the methods shape3FHyperboloid3FIntersects(int, float, float), shape3FHyperboloid3FIntersectionT(int, float, float) and shape3FHyperboloid3FIntersectionCompute(float, int, int) to the AbstractGeometryKernel class.
	* ADD:		Add the field shape3FHyperboloid3FArray to the AbstractGeometryKernel class.
	* ADD:		Add the methods getShape3FHyperboloid3FArray(), getShape3FHyperboloid3FCount(), getShape3FHyperboloid3FOffsetAbsolute(float[]), getShape3FHyperboloid3FOffsetRelative(float[]) and setShape3FHyperboloid3FArray(float[]) to the CompiledShape3FCache class.
	* ADD:		Add the method toArray() to the Hyperboloid3D class.
	* ADD:		Add the method toArray() to the Hyperboloid3F class.
	* ADD:		Add the constants ARRAY_LENGTH, ARRAY_OFFSET_A_H, ARRAY_OFFSET_C_H, ARRAY_OFFSET_PHI_MAX, ARRAY_OFFSET_POINT_A, ARRAY_OFFSET_POINT_B, ARRAY_OFFSET_R_MAX, ARRAY_OFFSET_Z_MAX and ARRAY_OFFSET_Z_MIN to the Hyperboloid3D class.
	* ADD:		Add the constants ARRAY_LENGTH, ARRAY_OFFSET_A_H, ARRAY_OFFSET_C_H, ARRAY_OFFSET_PHI_MAX, ARRAY_OFFSET_POINT_A, ARRAY_OFFSET_POINT_B, ARRAY_OFFSET_R_MAX, ARRAY_OFFSET_Z_MAX and ARRAY_OFFSET_Z_MIN to the Hyperboloid3F class.
	* CHANGE:	Optimized the Scene Compiler API.

2021-07-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods findFilesFromDirectory(), findFilesFromDirectory(File), findFilesFromDirectory(File, Predicate<File>), findFilesFromDirectory(File, Predicate<File>, Predicate<File>) and readAllBytesToString(File) to the Files class.
	* CHANGE:	Move the Files class from the Utility API to the Java I/O API.
	* CHANGE:	Move the MortonCodes class from the Utility API to the Geometry API.
	* REMOVE:	Remove the methods splitAndDiscardEmptySubstrings(String, String), toConstantJavaField(String, double[]) and toConstantJavaField(String, float[]) from the Strings class.
	* REMOVE:	Remove all example classes. Most of them can be found in the Javadocs.

2021-07-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Java AWT Image API.
	* ADD:		Add the Java Util API.
	* CHANGE:	Move the BufferedImages class from the Utility API to the Java AWT Image API.
	* CHANGE:	Move the MersenneTwisterRandom class from the Utility API to the Java Util API.
	* CHANGE:	Move the XORShiftRandom class from the Utility API to the Java Util API.

2021-07-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Java I/O API from the dependency org.macroing.java.
	* ADD:		Add the Java Util Concurrent Atomic API from the dependency org.macroing.java.
	* ADD:		Add the Java Util Function API from the dependency org.macroing.java.
	* ADD:		Add the method lightEvaluateRadianceEmittedAreaLight(float, float, float, float, float, float) to the AbstractLightKernel class.
	* ADD:		Add the fields lightDiffuseAreaLightArray and lightDiffuseAreaLightCount to the AbstractLightKernel class.
	* ADD:		Add the methods getLightDiffuseAreaLightArray(), getLightDiffuseAreaLightCount() and setLightDiffuseAreaLightArray(float[]) to the CompiledLightCache class.
	* ADD:		Add the methods accept(NodeHierarchicalVisitor), getRadianceEmitted(), getShape(), isTwoSided() and toArray() to the DiffuseAreaLight class.
	* ADD:		Add the constants ARRAY_LENGTH, ARRAY_OFFSET_IS_TWO_SIDED, ARRAY_OFFSET_OBJECT_TO_WORLD, ARRAY_OFFSET_RADIANCE_EMITTED, ARRAY_OFFSET_SHAPE_ID, ARRAY_OFFSET_SHAPE_OFFSET and ARRAY_OFFSET_WORLD_TO_OBJECT to the DiffuseAreaLight class.
	* CHANGE:	Update all import declarations that referred to classes and interfaces from the dependency org.macroing.java.
	* CHANGE:	Fix a bug in the AbstractLightKernel class. The image offset in the LDRImageLight class was referring to the image offset in the LDRImageTexture class.
	* CHANGE:	Change the method getLightCount() in the CompiledLightCache class to take into account what's returned by getLightDiffuseAreaLightCount().
	* CHANGE:	Change the value of the constant ARRAY_OFFSET_INTENSITY in the SpotLight class from 0 to 16 for better alignment.
	* CHANGE:	Change the value of the constant ARRAY_OFFSET_WORLD_TO_OBJECT in the SpotLight class from 3 to 0 for better alignment.
	* REMOVE:	Remove the dependency org.macroing.java.
	* REMOVE:	Remove the method lightEvaluateRadianceEmittedAny() from the AbstractLightKernel class.

2021-06-29  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getPointAt(double) to the Ray2D class.
	* ADD:		Add the method getPointAt(float) to the Ray2F class.
	* ADD:		Add the method getPointAt(double) to the Ray3D class.
	* ADD:		Add the method getPointAt(float) to the Ray3F class.
	* ADD:		Add the methods absolute(Vector2D), add(Vector2D, Vector2D, Vector2D), clearCache(), getCacheSize(), getCached(Vector2D), isUnitVector(), lerp(Vector2D, Vector2D, double), negateComponent1(Vector2D), negateComponent2(Vector2D), orthogonal(Vector2D, Vector2D), random(), randomNormalized(), reciprocal(Vector2D), u(), u(double), v(), v(double), x(), x(double), y() and y(double) to the Vector2D class.
	* ADD:		Add the methods absolute(Vector2F), add(Vector2F, Vector2F, Vector2F), clearCache(), getCacheSize(), getCached(Vector2F), isUnitVector(), lerp(Vector2F, Vector2F, float), negateComponent1(Vector2F), negateComponent2(Vector2F), orthogonal(Vector2F, Vector2F), random(), randomNormalized(), reciprocal(Vector2F), u(), u(float), v(), v(float), x(), x(float), y() and y(float) to the Vector2F class.
	* ADD:		Add the constants NaN and ZERO to the Vector2D class.
	* ADD:		Add the constants NaN and ZERO to the Vector2F class.
	* ADD:		Add the constructor Vector2D(double) to the Vector2D class.
	* ADD:		Add the constructor Vector2F(float) to the Vector2F class.

2021-06-26  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the classes BVHItem3D and BVHItem3F.
	* CHANGE:	Change the signature of the method create(List<LeafBVHNode3D>, Point3D, Point3D, int) in the class BVHNode3Ds to create(List<BVHItem3D<T>>, Point3D, Point3D, int). This is an optimization.
	* CHANGE:	Change the signature of the method create(List<LeafBVHNode3F>, Point3F, Point3F, int) in the class BVHNode3Fs to create(List<BVHItem3F<T>>, Point3F, Point3F, int). This is an optimization.

2021-06-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method addShapesTo(List<T>) to the LeafBVHNode3D class.
	* ADD:		Add the method addShapesTo(List<T>) to the LeafBVHNode3F class.
	* ADD:		Add the constants MAXIMUM and MINIMUM to the Point2D class.
	* ADD:		Add the constants MAXIMUM and MINIMUM to the Point2F class.
	* ADD:		Add the methods maximum(Point3D, Point3D, Point3D, Point3D) and minimum(Point3D, Point3D, Point3D, Point3D) to the Point3D class.
	* ADD:		Add the methods maximum(Point3F, Point3F, Point3F, Point3F) and minimum(Point3F, Point3F, Point3F, Point3F) to the Point3F class.
	* ADD:		Add the methods add(Point2D, double), centroid(Point2D, Point2D), centroid(Point2D, Point2D, Point2D), centroid(Point2D, Point2D, Point2D, Point2D), centroid(Point2D, Point2D, Point2D, Point2D, Point2D, Point2D, Point2D, Point2D), clearCache(), getCacheSize(), getCached(Point2D), getComponent(int), subtract(Point2D, Vector2D) and subtract(Point2D, double) to the Point2D class.
	* ADD:		Add the methods add(Point2F, float), centroid(Point2F, Point2F), centroid(Point2F, Point2F, Point2F), centroid(Point2F, Point2F, Point2F, Point2F), centroid(Point2F, Point2F, Point2F, Point2F, Point2F, Point2F, Point2F, Point2F), clearCache(), getCacheSize(), getCached(Point2F), getComponent(int), subtract(Point2F, Vector2F) and subtract(Point2F, float) to the Point2F class.
	* ADD:		Add the constructor Point2D(double) to the Point2D class.
	* ADD:		Add the constructor Point2F(float) to the Point2F class.

2021-06-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method equal(int[], int[], int, int, int) to the Ints class.
	* ADD:		Add the methods getCompiledLightCache(), getCompiledCameraCache(), getCompiledMaterialCache(), getCompiledPrimitiveCache(), getCompiledShape3FCache() and getCompiledTextureCache() to the CompiledScene class.
	* ADD:		Add the CompiledCameraCache, CompiledLightCache, CompiledMaterialCache, CompiledPrimitiveCache, CompiledShape3FCache and CompiledTextureCache classes.
	* REMOVE:	Remove all methods related to the compiled Camera, Light, Material, Primitive, Shape3F and Texture types from the CompiledScene class.

2021-06-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method getCompiledBoundingVolume3FCache() to the CompiledScene class.
	* ADD:		Add the class CompiledBoundingVolume3FCache.
	* ADD:		Add the methods getTextureBlendTextureCount(), getTextureBlendTextureOffsetAbsolute(float[]) and getTextureBlendTextureOffsetRelative(float[]) to the CompiledScene class.
	* REMOVE:	Remove the methods getBoundingVolume3FAxisAlignedBoundingBox3FArray(), getBoundingVolume3FBoundingSphere3FArray(), setBoundingVolume3FAxisAlignedBoundingBox3FArray(float[]) and setBoundingVolume3FBoundingSphere3FArray(float[]) from the CompiledScene class.

2021-06-22  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getShape3FTriangle3FCount(), getShape3FTriangle3FOffsetAbsolute(float[]) and getShape3FTriangle3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FTorus3FCount(), getShape3FTorus3FOffsetAbsolute(float[]) and getShape3FTorus3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FSphere3FCount(), getShape3FSphere3FOffsetAbsolute(float[]) and getShape3FSphere3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FRectangularCuboid3FCount(), getShape3FRectangularCuboid3FOffsetAbsolute(float[]) and getShape3FRectangularCuboid3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FRectangle3FCount(), getShape3FRectangle3FOffsetAbsolute(float[]) and getShape3FRectangle3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FPlane3FCount(), getShape3FPlane3FOffsetAbsolute(float[]) and getShape3FPlane3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FParaboloid3FCount(), getShape3FParaboloid3FOffsetAbsolute(float[]) and getShape3FParaboloid3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FDisk3FCount(), getShape3FDisk3FOffsetAbsolute(float[]) and getShape3FDisk3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FCylinder3FCount(), getShape3FCylinder3FOffsetAbsolute(float[]) and getShape3FCylinder3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the methods getShape3FCone3FCount(), getShape3FCone3FOffsetAbsolute(float[]) and getShape3FCone3FOffsetRelative(float[]) to the CompiledScene class.
	* ADD:		Add the method equal(double[], double[], int, int, int) to the Doubles class.
	* ADD:		Add the method equal(float[], float[], int, int, int) to the Floats class.

2021-06-21  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add sliders to change the aperture radius and focal distance of the camera in the GUI. They can be located in the camera configuration of the configuration view on the left-hand side.

2021-06-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the keys 'Q' and 'E' in the GUI to move the camera up and down, respectively.
	* ADD:		Add the method toString(boolean) to the Lens enum. If the parameter argument true is passed, the old String representation (which is now called the internal format) will be returned, otherwise the new external format will be used.
	* ADD:		Add camera configuration to the configuration view on the left-hand side in the GUI.
	* ADD:		Add a new Geometry Bounding Volume Hierarchy API.
	* CHANGE:	Change what's returned from the toString() method of the Lens enum.
	* CHANGE:	Change the layout of the configuration view on the left-hand side in the GUI to an accordion.
	* CHANGE:	Some minor changes to the PerezLight class and its equivalent GPU-renderer version in the AbstractLightKernel class.
	* CHANGE:	Refactor the TriangleMesh3D, TriangleMesh3F, AbstractGeometryKernel and Shape3FCache classes to use the new Geometry Bounding Volume Hierarchy API.

2021-06-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add Vertex3D-caching to the Triangle3D class.
	* ADD:		Add Vertex3F-caching to the Triangle3F class.
	* ADD:		Add the methods getCached(Vertex3D), getCacheSize() and clearCache() to the Vertex3D class.
	* ADD:		Add the methods getCached(Vertex3F), getCacheSize() and clearCache() to the Vertex3F class.
	* ADD:		Add the constructors Circle2I(Circle2D) and Circle2I(Circle2F) to the Circle2I class.
	* ADD:		Add the constructors Rectangle2I(Rectangle2D) and Rectangle2I(Rectangle2F) to the Rectangle2I class.
	* ADD:		Add the constructors Point2I(Point2D) and Point2I(Point2F) to the Point2I class.
	* ADD:		Add the constructor Circle2D(Rectangle2D) to the Circle2D class.
	* ADD:		Add the constructor Circle2F(Rectangle2F) to the Circle2F class.
	* ADD:		Add the method midpoint(Point2D, Point2D) to the Point2D class.
	* ADD:		Add the method midpoint(Point2F, Point2F) to the Point2F class.
	* ADD:		Add the constructor Rectangle2D(Circle2D) to the Rectangle2D class.
	* ADD:		Add the constructor Rectangle2F(Circle2F) to the Rectangle2F class.
	* ADD:		Add the constructor Rectangle2I(Circle2I) to the Rectangle2I class.
	* CHANGE:	Optimized the Scene Compiler API.
	* REMOVE:	Remove the method getBounds() from the Circle2I class.

2021-06-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method add(Point2D, Vector2D, double) to the Point2D class.
	* ADD:		Add the method add(Point2F, Vector2F, float) to the Point2F class.
	* ADD:		Add the method directionNormalized(Point2D, Point2D) to the Vector2D class.
	* ADD:		Add the method directionNormalized(Point2F, Point2F) to the Vector2F class.
	* ADD:		Add the methods getColorRGBA(Point2I), getColorRGBA(Point2I, Function<Point2I, Color4D>) and getColorRGBA(Point2I, PixelOperation) to the ImageD class.
	* ADD:		Add the methods getColorRGBA(Point2I), getColorRGBA(Point2I, Function<Point2I, Color4F>) and getColorRGBA(Point2I, PixelOperation) to the ImageF class.
	* ADD:		Add the methods getColorRGB(Point2D), getColorRGB(Point2D, PixelOperation), getColorRGB(Point2I) and getColorRGB(Point2I, PixelOperation) to the ImageD class.
	* ADD:		Add the methods getColorRGB(Point2F), getColorRGB(Point2F, PixelOperation), getColorRGB(Point2I) and getColorRGB(Point2I, PixelOperation) to the ImageF class.
	* ADD:		Add the method drawCircleComplement(Circle2I, BiFunction<Color4D, Point2I, Color4D>) to the ImageD class.
	* ADD:		Add the method drawCircleComplement(Circle2I, BiFunction<Color4F, Point2I, Color4F>) to the ImageF class.

2021-06-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods getBounds(), findPointsOfComplement(), findPointsOfComplement(Rectangle2I), findPointsOfComplement(Rectangle2I, boolean), findPointsOfIntersection(), findPointsOfIntersection(Rectangle2I) and findPointsOfIntersection(Rectangle2I, boolean) to the Circle2I class.
	* ADD:		Add the method fillCircleComplement(Circle2I, BiFunction<Color4D, Point2I, Color4D>) to the ImageD class.
	* ADD:		Add the method fillCircleComplement(Circle2I, BiFunction<Color4F, Point2I, Color4F>) to the ImageF class.
	* ADD:		Add the methods createCurvesByBSpline() and createCurvesByBezier() to the Curve3D and Curve3F classes.

2021-06-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods toRGBE() and fromRGBE(int) to the Color3D and Color3F classes.
	* ADD:		Add the class DoubleImageD.
	* ADD:		Add the class FloatImageF.
	* ADD:		Add the methods requireExactArrayLength(double[], int, String) and requireExactArrayLength(float[], int, String) to the ParameterArguments class.
	* ADD:		Add the method array(int, double, double, double, double) to the Doubles class.
	* ADD:		Add the method array(int, float, float, float, float) to the Floats class.
	* CHANGE:	Some minor changes to the PerezLight class and its equivalent GPU-renderer version in the AbstractLightKernel class.
	* CHANGE:	Refactor the package org.dayflower.javafx.canvas to org.dayflower.javafx.scene.canvas.

2021-06-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a new Scene Compiler API. It used to be a private API in the Renderer GPU API.

2021-06-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the order of UndoActions in the ChangeCombiner to the reverse of the order they were added.

2021-06-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the Noise API that includes the classes PerlinNoiseD, PerlinNoiseF, SimplexNoiseD and SimplexNoiseF.
	* ADD:		Add the class FileParameter.
	* ADD:		Add the classes AxisAlignedBoundingBox3DReader, AxisAlignedBoundingBox3FReader, BoundingSphere3DReader, BoundingSphere3FReader, InfiniteBoundingVolume3DReader, InfiniteBoundingVolume3FReader, DefaultBoundingVolume3DReader and DefaultBoundingVolume3FReader.
	* ADD:		Add the method write(DataOutput) to the classes AxisAlignedBoundingBox3D, AxisAlignedBoundingBox3F, BoundingSphere3D, BoundingSphere3F, InfiniteBoundingVolume3D and InfiniteBoundingVolume3F.
	* ADD:		Add an extends clause with BoundingVolumeReader to BoundingVolume3DReader and BoundingVolume3FReader.
	* ADD:		Add the interfaces BoundingVolume and BoundingVolumeReader.
	* CHANGE:	Change the factor of the sun color in the PerezLight from 0.001F to 0.0001F. The original value was 0.0001F. The value 0.001F produced more shadows, but also some artifacts.
	* CHANGE:	Change the extended interface of BoundingVolume3D and BoundingVolume3F from Node to BoundingVolume.
	* REMOVE:	Remove the classes NoiseD and NoiseF from the Utility API.
	* REMOVE:	Remove the method getID() from BoundingVolume3D and BoundingVolume3F.
	* REMOVE:	Remove the method isSupported(int) from BoundingVolume3DReader and BoundingVolume3FReader.

2021-06-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for Rectangle3F in the GPU-renderer.
	* ADD:		Add support for Rectangle3DReader in DefaultShape3DReader.
	* ADD:		Add support for Rectangle3FReader in DefaultShape3FReader.
	* ADD:		Add the classes Rectangle3D, Rectangle3DReader, Rectangle3F and Rectangle3FReader.
	* CHANGE:	Fix a bug in the Specular BRDF that uses a constant Fresnel in the GPU-renderer. The red and blue components were swapped.
	* CHANGE:	Change the IDs of RectangularCuboid3D, RectangularCuboid3F, Sphere3D, Sphere3F, Torus3D, Torus3F, Triangle3D, Triangle3F, TriangleMesh3D and TriangleMesh3F.

2021-06-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method createScreenCapture(Rectangle2I) to the IntImageD and IntImageF classes.
	* ADD:		Add the methods blend(ImageD, ImageD), blend(ImageD, ImageD, double) and blend(ImageD, ImageD, double, double, double, double) to the ByteImageD and IntImageD classes.
	* ADD:		Add the methods blend(ImageF, ImageF), blend(ImageF, ImageF, float) and blend(ImageF, ImageF, float, float, float, float) to the ByteImageF and IntImageF classes.
	* ADD:		Add the classes HBoxes and VBoxes.

2021-06-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for the method hasFinishedSucceeded() of the PredicateTask class in the ConcurrentImageCanvas class.
	* ADD:		Add the method hasFinishedSucceeded() to the PredicateTask class.

2021-06-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods color3FLHSSetMaximumTo1(float, float, float) and color3FRHSSetMaximumTo1(float, float, float) to the AbstractImageKernel class.
	* ADD:		Add support for window resizing in the GPU-renderer.
	* ADD:		Add support for undo and redo operations to the ImageD and ImageF classes.
	* ADD:		Add the methods isChangeHistoryEnabled(), setChangeHistoryEnabled(boolean), getChangeHistory(), redo() and undo() to the Image class.
	* ADD:		Add the class ChangeCombiner.

2021-06-02  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a simple Change API to handle undo and redo operations.
	* ADD:		Add the method putColorRGBA(Color4D, int) to the ImageD, ByteImageD, IntImageD and PixelImageD classes.
	* ADD:		Add the method putColorRGBA(Color4F, int) to the ImageF, ByteImageF, IntImageF and PixelImageF classes.
	* CHANGE:	Change the abstract modifier of the methods setColorRGBA(Color4D, int, PixelOperation) and setColorRGBA(Color4D, int, int, PixelOperation) in the ImageD class to final and add their implementations.
	* CHANGE:	Change the abstract modifier of the methods setColorRGBA(Color4F, int, PixelOperation) and setColorRGBA(Color4F, int, int, PixelOperation) in the ImageF class to final and add their implementations.
	* REMOVE:	Remove the methods setColorRGBA(Color4D, int, PixelOperation) and setColorRGBA(Color4D, int, int, PixelOperation) from the ByteImageD, IntImageD and PixelImageD classes.
	* REMOVE:	Remove the methods setColorRGBA(Color4F, int, PixelOperation) and setColorRGBA(Color4F, int, int, PixelOperation) from the ByteImageF, IntImageF and PixelImageF classes.

2021-06-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the class Files.
	* ADD:		Add the methods addLater(Object) and addLater(Object, Consumer<Tab>) to the NodeSelectionTabPane class.
	* ADD:		Add support for resizing the Dayflower application window, including the ConcurrentImageCanvas, the Camera and the CPU-renderer. This feature is in early development and may not work as expected yet.
	* ADD:		Add the method setImageUpdater(ImageUpdater) to the ConcurrentImageCanvas class.
	* ADD:		Add the class ConcurrentImageCanvas.ImageUpdater.
	* REMOVE:	Remove the method setImage(Image) from the ConcurrentImageCanvas class.

2021-05-30  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a generic type for the Image to the ConcurrentImageCanvas class.
	* ADD:		Add a class called ConcurrentImageCanvasPane.
	* CHANGE:	Change the type ImageF in the constructors of the ConcurrentImageCanvas class to a generic type T that extends Image.
	* CHANGE:	Change the method signature of the single method in the ConcurrentImageCanvas.Observer interface.

2021-05-29  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the BXDF for GlossyMaterial from AshikhminShirleyBRDF to TorranceSparrowBRDF. The change was also done in the GPU-renderer.
	* REMOVE:	Remove the old material system in the GPU-renderer.
	* REMOVE:	Remove the old Path Tracer implementations from the GPU-renderer.

2021-05-24  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the classes Triangle3DReader and Triangle3FReader.

2021-05-23  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for LDRImageLight to the new lighting system in the GPU-renderer.

2021-05-19  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Fix a bug in the AbstractMaterialKernel class. The negation flag for the incoming direction was only accounted for in one case.

2021-05-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the classes Triangle2DReader, Triangle2FReader and Triangle2IReader.

2021-05-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add an extends clause with ShapeReader to Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader.
	* ADD:		Add the interfaces Shape and ShapeReader.
	* ADD:		Add the classes RectangularCuboid3DReader, RectangularCuboid3FReader, Sphere3DReader, Sphere3FReader, Torus3DReader and Torus3FReader.
	* CHANGE:	Change the extended interface of Shape2D, Shape2F, Shape2I, Shape3D and Shape3F from Node to Shape.
	* REMOVE:	Remove the methods getName(), getID(), write(DataOutput), write(File) and write(String) from Shape2D, Shape2F, Shape2I, Shape3D and Shape3F.
	* REMOVE:	Remove the method isSupported(int) from Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader.

2021-05-16  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method read(DataInput) to the interfaces BoundingVolume3DReader and BoundingVolume3FReader.
	* ADD:		Add an IllegalArgumentException to the contract of the method read(DataInput, int) of the interfaces BoundingVolume3DReader and BoundingVolume3FReader.
	* ADD:		Add the constructor Rectangle2D(Point2D, Point2D, Point2D, Point2D) to the Rectangle2D class.
	* ADD:		Add the constructor Rectangle2F(Point2F, Point2F, Point2F, Point2F) to the Rectangle2F class.
	* ADD:		Add the constructor Rectangle2I(Point2I, Point2I, Point2I, Point2I) to the Rectangle2I class.
	* ADD:		Add the classes Plane3DReader, Plane3FReader, ProceduralTerrain3DReader, ProceduralTerrain3FReader, Rectangle2DReader, Rectangle2FReader and Rectangle2IReader.

2021-05-15  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the default methods write(File) and write(String) to the interfaces Shape2D, Shape2F, Shape2I, Shape3D and Shape3F.
	* ADD:		Add the constructor Hyperboloid3D(AngleD, Point3D, Point3D, double, double, double, double, double) to the Hyperboloid3D class.
	* ADD:		Add the constructor Hyperboloid3F(AngleF, Point3F, Point3F, float, float, float, float, float) to the Hyperboloid3F class.
	* ADD:		Add the method write(DataOutput) to the interfaces Shape2D, Shape2F, Shape2I, Shape3D and Shape3F.
	* ADD:		Add the method read(DataInput) to the interfaces Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader as well as to all classes that implements any of these.
	* ADD:		Add an IllegalArgumentException to the contract of the method read(DataInput, int) of the interfaces Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader as well as to all classes that implements any of these.
	* ADD:		Add the method write(DataOutput) to the classes Cone3D, Cone3F, ConstructiveSolidGeometry3D, ConstructiveSolidGeometry3F, Curve3D, Curve3F, Curves3D, Curves3F, Cylinder3D, Cylinder3F, Disk3D, Disk3F, Hyperboloid3D, Hyperboloid3F, Line2D, Line2F, Line2I, Paraboloid3D, Paraboloid3F, Plane3D, Plane3F, ProceduralTerrain3D, ProceduralTerrain3F, Rectangle2D, Rectangle2F, Rectangle2I, RectangularCuboid3D, RectangularCuboid3F, Sphere3D, Sphere3F, Torus3D, Torus3F, Triangle2D, Triangle2F, Triangle2I, Triangle3D, Triangle3F, TriangleMesh3D and TriangleMesh3F.
	* ADD:		Add the classes Cone3DReader, Cone3FReader, ConstructiveSolidGeometry3DReader, ConstructiveSolidGeometry3FReader, Curve3DReader, Curve3FReader, Curves3DReader, Curves3FReader, Cylinder3DReader, Cylinder3FReader, DefaultShape2DReader, DefaultShape2FReader, DefaultShape2IReader, DefaultShape3DReader, DefaultShape3FReader, Disk3DReader, Disk3FReader, Hyperboloid3DReader, Hyperboloid3FReader, Line2DReader, Line2FReader, Line2IReader, Paraboloid3DReader and Paraboloid3FReader.
	* CHANGE:	A problem related to the renderShutdown() method in the AbstractGPURenderer class has been fixed. Movement using the WASD-keys in the JavaFX Application caused the Path Tracer to stop rendering, but not the Ambient Occlusion or Ray Caster.

2021-05-14  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method write(DataOutput) to the classes Circle2D, Circle2F and Circle2I.
	* ADD:		Add the classes Circle2DReader, Circle2FReader and Circle2IReader.
	* ADD:		Add the interfaces BoundingVolume3DReader, BoundingVolume3FReader, Shape2DReader, Shape2FReader, Shape2IReader, Shape3DReader and Shape3FReader.
	* ADD:		Add the methods getName() and getID() to the classes Circle2D, Circle2F, Circle2I, Line2D, Line2F, Line2I, Rectangle2D, Rectangle2F, Rectangle2I, Triangle2D, Triangle2F and Triangle2I.
	* ADD:		Add the methods getName() and getID() to the interfaces Shape2D, Shape2F and Shape2I.
	* ADD:		Add an inner class called Builder to the GlassMaterial class.
	* ADD:		Add an inner class called Builder to the GlossyMaterial class.
	* ADD:		Add the methods read(DataInput) and write(DataOutput) to the classes Color3D, Color3F, Color4D and Color4F.
	* ADD:		Add the methods read(DataInput) and write(DataOutput) to the classes AngleD, AngleF, Matrix33D, Matrix33F, Matrix44D, Matrix44F, OrthonormalBasis33D, OrthonormalBasis33F, Point2D, Point2F, Point2I, Point3D, Point3F, Point4D, Point4F, Quaternion4D, Quaternion4F, Ray2D, Ray2F, Ray3D, Ray3F, Vector2D, Vector2F, Vector2I, Vector3D, Vector3F, Vector4D and Vector4F.
	* ADD:		Add the methods createClearCoatMaterialScene(), createCone3FScene(), createConstructiveSolidGeometry3FScene(), createCylinder3FScene(), createDisk3FScene(), createDisneyMaterialScene(), createGlassMaterialScene() and createGlossyMaterialScene() to the Demo class.
	* CHANGE:	Change the name of the method setThis(boolean) to setThin(boolean) in the class DisneyMaterial.Builder. It was not correctly spelled.

2021-05-13  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a class called Ray2D.
	* ADD:		Add a class called Ray2F.
	* ADD:		Add new constructors to FileRendererObserver that accepts a parameter argument called isPrintingOnDisplay. If it is set to true, a message will be printed to standard output when the onRenderDisplay(Renderer, ImageF) method is called.

2021-05-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a class called Vector2I.
	* ADD:		Add a constructor that accepts a Vector2I instance as a parameter argument to the Point2I class.

2021-05-10  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the use of Double.MAX_VALUE to Doubles.MAX_VALUE.
	* CHANGE:	Change the use of Double.MIN_VALUE to Doubles.MIN_VALUE.
	* CHANGE:	Change the use of Float.MAX_VALUE to Floats.MAX_VALUE.
	* CHANGE:	Change the use of Float.MIN_VALUE to Floats.MIN_VALUE.
	* CHANGE:	Change the value of Doubles.MIN_VALUE from Double.MIN_VALUE to -Double.MAX_VALUE.
	* CHANGE:	Change the value of Floats.MIN_VALUE from Float.MIN_VALUE to -Float.MAX_VALUE.

2021-05-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Refactor the return type of many methods in ImageD from void to ImageD, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in ImageF from void to ImageF, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in ByteImageD from void to ByteImageD, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in ByteImageF from void to ByteImageF, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in IntImageD from void to IntImageD, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in IntImageF from void to IntImageF, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in PixelImageD from void to PixelImageD, such that method chaining can be performed.
	* CHANGE:	Refactor the return type of many methods in PixelImageF from void to PixelImageF, such that method chaining can be performed.

2021-05-08  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a constant called TRANSPARENT to the Color4D class.
	* ADD:		Add a constant called TRANSPARENT to the Color4F class.
	* ADD:		Add the methods transform(Matrix33D, Point2D) and transformAndDivide(Matrix33D, Point2D) to the Point2D class.
	* ADD:		Add the methods transform(Matrix33F, Point2F) and transformAndDivide(Matrix33F, Point2F) to the Point2F class.
	* ADD:		Add the methods transform(Matrix33D, Vector2D) and transformTranspose(Matrix33D, Vector2D) to the Vector2D class.
	* ADD:		Add the methods transform(Matrix33F, Vector2F) and transformTranspose(Matrix33F, Vector2F) to the Vector2F class.
	* ADD:		Add the method getColorRGBA(int, int, Function<Point2I, Color4D>) to the ImageD, ByteImageD, IntImageD and PixelImageD classes.
	* ADD:		Add the method getColorRGBA(int, int, Function<Point2I, Color4F>) to the ImageF, ByteImageF, IntImageF and PixelImageF classes.
	* ADD:		Add the methods getColorRGBA(Point2D), getColorRGBA(Point2D, PixelOperation), getColorRGBA(Point2D, Function<Point2I, Color4D>) and getColorRGBA(double, double, Function<Point2I, Color4D>) to the ImageD class.
	* ADD:		Add the methods getColorRGBA(Point2F), getColorRGBA(Point2F, PixelOperation), getColorRGBA(Point2F, Function<Point2I, Color4F>) and getColorRGBA(float, float, Function<Point2I, Color4F>) to the ImageF class.
	* ADD:		Add a new rotate(AngleD, boolean) method to the ImageD class. The boolean parameter argument, called isWrappingAround, allows for wrapping using PixelOperation.WRAP_AROUND.
	* ADD:		Add a new rotate(AngleF, boolean) method to the ImageF class. The boolean parameter argument, called isWrappingAround, allows for wrapping using PixelOperation.WRAP_AROUND.
	* ADD:		Add a class called Matrix33D.
	* ADD:		Add a class called Matrix33F.

2021-05-07  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method negate(AngleD) to the AngleD class.
	* ADD:		Add the method negate(AngleF) to the AngleF class.
	* ADD:		Add the methods add(Point2D, Vector2D), maximum(Point2D, Point2D, Point2D, Point2D) and minimum(Point2D, Point2D, Point2D, Point2D) to the Point2D class.
	* ADD:		Add the methods add(Point2F, Vector2F), maximum(Point2F, Point2F, Point2F, Point2F) and minimum(Point2F, Point2F, Point2F, Point2F) to the Point2F class.
	* ADD:		Add the methods rotate(Rectangle2D, AngleD) and translate(Rectangle2D, Vector2D) to the Rectangle2D class.
	* ADD:		Add the methods rotate(Rectangle2F, AngleF) and translate(Rectangle2F, Vector2F) to the Rectangle2F class.
	* ADD:		Add the method newImage(int, int) to the ImageD, ByteImageD, IntImageD and PixelImageD classes.
	* ADD:		Add the method newImage(int, int) to the ImageF, ByteImageF, IntImageF and PixelImageF classes.
	* ADD:		Add the methods rotate(AngleD), scale(Vector2D) and scale(int, int) to the ImageD class.
	* ADD:		Add the methods rotate(AngleF), scale(Vector2F) and scale(int, int) to the ImageF class.
	* ADD:		Add the methods requireRange(double, double, double, String) and requireRange(float, float, float, String) to the ParameterArguments class.

2021-05-06  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method contains(Point2D) to the Line2D class.
	* ADD:		Add the method contains(Point2F) to the Line2F class.
	* ADD:		Add the method contains(Point2I) to the Line2I class.
	* ADD:		Add the methods contains(Point2D), intersection(Rectangle2D, Rectangle2D) and union(Rectangle2D, Rectangle2D) to the Rectangle2D class.
	* ADD:		Add the methods contains(Point2F), intersection(Rectangle2F, Rectangle2F) and union(Rectangle2F, Rectangle2F) to the Rectangle2F class.
	* ADD:		Add the methods contains(Point2I) and union(Rectangle2I, Rectangle2I) to the Rectangle2I class.
	* ADD:		Add the methods fillSimplexFractionalBrownianMotion(), fillSimplexFractionalBrownianMotion(Color3D) and fillSimplexFractionalBrownianMotion(Color3D, double, double, int) to the ImageD class.
	* ADD:		Add the methods fillSimplexFractionalBrownianMotion(), fillSimplexFractionalBrownianMotion(Color3F) and fillSimplexFractionalBrownianMotion(Color3F, float, float, int) to the ImageF class.

2021-05-05  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods maximum(Point2I, Point2I) and minimum(Point2I, Point2I) to the Point2I class.
	* ADD:		Add the method intersection(Rectangle2I, Rectangle2I) to the Rectangle2I class.
	* ADD:		Add the method copy(Rectangle2I) to the ImageD, ImageF, ByteImageD, ByteImageF, IntImageD, IntImageF, PixelImageD and PixelImageF classes.
	* CHANGE:	Change the algorithm for the methods getHeight() and getWidth() in the Rectangle2D, Rectangle2F and Rectangle2I classes.

2021-05-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods fillGradient() and fillGradient(Color3D, Color3D, Color3D, Color3D) to the ImageD class.
	* ADD:		Add the methods fillGradient() and fillGradient(Color3F, Color3F, Color3F, Color3F) to the ImageF class.
	* ADD:		Add the constructors Color4D(Color3D, double), Color4D(Color3D, double) and Color4D(double, double) to the Color4D class.
	* ADD:		Add the constructors Color4F(Color3D, float), Color4F(Color3F, float) and Color4F(float, float) to the Color4F class.
	* ADD:		Add the methods blendOver(Color4D, Color4D), grayscaleAverage(Color4D), grayscaleComponent1(Color4D), grayscaleComponent2(Color4D), grayscaleComponent3(Color4D), grayscaleLightness(Color4D), grayscaleLuminance(Color4D), grayscaleMaximum(Color4D), grayscaleMinimum(Color4D) and sepia(Color4D) to the Color4D class.
	* ADD:		Add the methods blendOver(Color4F, Color4F), grayscaleAverage(Color4F), grayscaleComponent1(Color4F), grayscaleComponent2(Color4F), grayscaleComponent3(Color4F), grayscaleLightness(Color4F), grayscaleLuminance(Color4F), grayscaleMaximum(Color4F), grayscaleMinimum(Color4F) and sepia(Color4F) to the Color4F class.
	* ADD:		Add the methods blendOver(ImageD), grayscaleAverage(), grayscaleComponent1(), grayscaleComponent2(), grayscaleComponent3(), grayscaleLightness(), grayscaleLuminance(), grayscaleMaximum(), grayscaleMinimum(), sepia() and transparency(double) to the ImageD class.
	* ADD:		Add the methods blendOver(ImageF), grayscaleAverage(), grayscaleComponent1(), grayscaleComponent2(), grayscaleComponent3(), grayscaleLightness(), grayscaleLuminance(), grayscaleMaximum(), grayscaleMinimum(), sepia() and transparency(float) to the ImageF class.

2021-05-03  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods update(BiFunction<Color4D, Point2I, Color4D>) and update(BiFunction<Color4D, Point2I, Color4D>, Rectangle2I) to the ImageD class.
	* ADD:		Add the methods update(BiFunction<Color4F, Point2I, Color4F>) and update(BiFunction<Color4F, Point2I, Color4F>, Rectangle2I) to the ImageF class.
	* ADD:		Add the constructor IntImageD(BufferedImage) to the IntImageD class.
	* ADD:		Add the constructor IntImageF(BufferedImage) to the IntImageF class.
	* ADD:		Add the methods load(File) and load(String) to the IntImageD class.
	* ADD:		Add the methods load(File) and load(String) to the IntImageF class.

2021-04-25  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the methods addAndMultiply(Color3D, Color3D, Color3D) and addAndMultiply(Color3D, Color3D, Color3D, double) to the Color3D class.
	* ADD:		Add the methods addAndMultiply(Color3F, Color3F, Color3F) and addAndMultiply(Color3F, Color3F, Color3F, float) to the Color3F class.

2021-04-18  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add support for changing the rendering algorithm in the AbstractGPURenderer and GPURenderer classes.

2021-04-17  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add an inner class called Builder to the DisneyMaterial class.
	* ADD:		Add an inner class called Builder to the ClearCoatMaterial class.

2021-04-11  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method setImage() to the Renderer interface as well as an implementation of it in the AbstractCPURenderer and AbstractGPURenderer classes.
	* ADD:		Add a class called Demo with methods to create Scene instances for demonstration purposes.
	* ADD:		Add the methods getAmplitudes(), getWavelengths(), parseSPD(File) and printSPDToJava(File, File) to the classes IrregularSpectralCurveD and IrregularSpectralCurveF.
	* ADD:		Add the method radicalInverse(int, long) to the classes Doubles and Floats.
	* ADD:		Add the methods toConstantJavaField(String, double[]) and toConstantJavaField(String, float[]) to the Strings class.
	* REMOVE:	Remove the Previews class.

2021-04-09  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* CHANGE:	Change the resolution of the Distribution2F that is created by the LDRImageLight class from the resolution of the image itself to 32x32.

2021-04-04  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add the method pack(int, int, int, int) to the Ints class.
	* CHANGE:	Update the memory requirement for ClearCoatMaterial, DisneyMaterial, GlassMaterial, GlossyMaterial, MatteMaterial, MetalMaterial, MirrorMaterial, PlasticMaterial and SubstrateMaterial on the GPU.

2021-04-01  Jörgen Lundgren  <joergen.lundgren@macroing.org>

	* ADD:		Add a dependency to org.macroing.java.
	* CHANGE:	Update the sun sampling for the PerezLight class.
	* CHANGE:	The package names of the classes and interfaces in the Utility API that were moved to org.macroing.java were updated.
	* REMOVE:	Some classes and interfaces in the Utility API were moved to org.macroing.java and therefore removed from the Utility API.